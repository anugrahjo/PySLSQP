[build-system]
requires = ['meson-python', 'setuptools', 'ninja', 'numpy']
build-backend = 'setuptools.build_meta'

[project]
name = 'pyslsqp'
description = 'A transparent Python interface to the SLSQP optimization algorithm, with advanced features and visualization capabilities.'
readme = 'README.md'
requires-python = '>=3.8'
license = {file = 'LICENSE.txt'}
authors = [
  {name = 'Anugrah Jo Joshy', email = 'ajoshy.ucsd@gmail.com'},
]
maintainers = [
  {name = 'Anugrah Jo Joshy', email = 'ajoshy.ucsd@gmail.com'},
]
keywords=['slsqp', 'optimization', 'optimization algorithm', 'nlp', 'optimizer', 'nonlinear programming', 'numerical optimization']
dynamic = ["version"]
dependencies = [
  "numpy>=1.16", 
  "h5py>=2.10", 
  "matplotlib>=3.4"
]
classifiers=[
  'Development Status :: 4 - Beta',
  # 'Development Status :: 5 - Production/Stable',
  'License :: OSI Approved :: BSD License',
  'Operating System :: MacOS',
  'Operating System :: POSIX :: Linux', 
  'Programming Language :: Python',
  'Programming Language :: Python :: 3.8',
  'Programming Language :: Python :: 3.9',
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: 3.11',
  'Programming Language :: Python :: 3.12',
  'Intended Audience :: Developers',
  'Intended Audience :: Science/Research',
  'Natural Language :: English',
  'Topic :: Scientific/Engineering',
  'Topic :: Scientific/Engineering :: Mathematics',
  'Topic :: Software Development :: Libraries',
]

[project.urls]
"Homepage/Repository" = "https://github.com/anugrahjo/pyslsqp"
Documentation = 'https://pyslsqp.readthedocs.io/en/latest/'
"Bug Tracker" = "https://github.com/anugrahjo/pyslsqp/issues"
Changelog = "https://pyslsqp.readthedocs.io/en/latest/src/changelog.html"
Download = "https://pypi.org/project/pyslsqp/#files"

[tool.setuptools.dynamic]
version = {attr = "pyslsqp.__version__"}

[tool.setuptools]
package-dir = {"" = "."}

# [tool.setuptools.package-data]
# If there are data files included in your packages that need to be
# installed, specify them here.
# "*" = ["meson*", "*.so", "*.lib", "*.pyd", "*.pdb", "*.dylib", "*.dll"]

[tool.pytest.ini_options]
markers = [
    "visualize: marks tests as visualize (deselect with '-m \"not visualize\"')",
]

[tool.coverage.run]
omit = [
    # omit anything in a tests directory anywhere
    "*/tests/*",
    # omit everything in the docs directory
    "/docs/*",
    # omit this single file since visualization is not tested by default
    "pyslsqp/visualize.py",
    ]

[tool.cibuildwheel]
# Disable building for PyPy, 32bit, and musllinux 
# There's no h5py pre-built package for musllinux, so pip will try to build h5py from source, 
# and it will fail building since pip won't be able to find and load HDF5.
skip = ["pp*", "*-win32", "*-manylinux_i686", "*-musllinux*"]
build-frontend = { name = "build", args = ["--wheel"] }
# build-frontend = { name = "build", args = ["--wheel", "--no-isolation"] }
# before-build = "pip install wheel numpy ninja setuptools meson meson-python wheel" # This is required if we call build with --no-isolation above
test-requires = "pytest"
test-command = 'pytest {project}/tests -m "not visualize"'